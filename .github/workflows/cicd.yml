env:
  BUILD_NAME: myBuild
  APPLICATION_NAME: github-action
  S3_BUCKET_NAME: spring-githubaction-bucket
  DEPLOY_GROUP_NAME: my-codedeploy-group

on:
  # 직접 실행
  workflow_dispatch:
  # push 됐을 때
  push:
    branches:
      [ main ]

jobs:
    test:
      runs-on: ubuntu-latest
      steps:
        - name: Check-Out
          uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'zulu'

        - name: Grant execute permission for gradlew
          run: chmod +x ./gradlew

        - name: Run Test
          run: ./gradlew test

    deploy:
      needs: test
      runs-on: ubuntu-latest
      steps:
        - name: Check-Out
          uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'zulu'

        - name: Grant execute permission for gradlew
          run: chmod +x ./gradlew

        - name: Build project
          run: ./gradlew clean build -x test

        - name: Make Zip file
          run: zip -r ./{{ env.BUILD_NAME }}.zip .
          shell: bash

        - name: Set AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-northeast-2

        - name: Upload to S3
          run: aws s3 cp --region ap-northeast-2 ./{{ env.BUILD_NAME }}.zip s3://{{ env.S3_BUCKET_NAME }}


        - name: Deploy to EC2 From S3
          run:
            aws deploy create-deployment
            --application-name {{ env.APPLICATION_NAME }}
            --deployment-config-name CodeDeployDefault.OneAtATime
            --deployment-group-name {{ env.DEPLOY_GROUP_NAME }}
            --s3-location bucket={{ env.S3_BUCKET_NAME }},bundleType=zip,key={{ env.BUILD_NAME }}.zip
